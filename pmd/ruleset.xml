<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="quickstart" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>Quickstart configuration of PMD for Salesforce.com Apex. Customized for AppExchange security review.</description>

	<!-- COMPLEXITY -->
	<rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
		<priority>2</priority>
		<properties>
			<property name="minimum" value="5000" />
		</properties>
	</rule>
	<rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
		<priority>2</priority>
		<properties>
			<property name="minimum" value="10" />
		</properties>
	</rule>
	<rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" message="Deeply nested if..else statements are hard to read">
		<priority>2</priority>
		<properties>
			<property name="problemDepth" value="5" />
		</properties>
	</rule>

<!-- <rule ref="category/apex/design.xml/ExcessivePublicCount" message="This class has too many public methods and attributes">
		<priority>2</priority>
		<properties>
		<property name="minimum" value="100" />
		</properties>
</rule> -->
<!-- <rule ref="category/apex/design.xml/NcssMethodCount" message="The method {0}() has an NCSS line count of {1}"/> -->
<!-- <rule ref="category/apex/design.xml/NcssTypeCount" message="The type has an NCSS line count of {0}"/> -->
<!-- <rule ref="category/apex/design.xml/NcssConstructorCount" message="The constructor has an NCSS line count of {0}"/> -->
<!-- <rule ref="category/apex/design.xml/StdCyclomaticComplexity" message="The {0} ''{1}'' has a Standard Cyclomatic Complexity of {2}."/> -->
<!-- <rule ref="category/apex/design.xml/TooManyFields" message="Too many fields"/> -->
<!-- <rule ref="category/apex/design.xml/CyclomaticComplexity"/> -->
<!-- <rule ref="category/apex/design.xml/CognitiveComplexity"/> -->

	<!-- PERFORMANCE -->
	<rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Avoid operations in loops that may hit governor limits">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/performance.xml/EagerlyLoadedDescribeSObjectResult">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" message="Avoid logic in triggers">
		<priority>2</priority>
	</rule>
<!-- <rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier"/> -->
<!-- <rule ref="category/apex/performance.xml/AvoidDebugStatements" /> -->

	<rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly accessing Trigger.old and Trigger.new">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter">
		<priority>2</priority>
	</rule>
	<!-- <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" /> -->


	<!-- NAMING -->
	<rule ref="category/apex/codestyle.xml/ClassNamingConventions" message="Class names should begin with an uppercase character">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/MethodNamingConventions" message="Method name does not begin with a lower case character.">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/FieldNamingConventions">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/PropertyNamingConventions">
		<priority>2</priority>
	</rule>

	<!-- TESTS -->
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses" message="Test methods must be in a test class">
		<priority>2</priority>
	</rule>
<!--    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"/> -->
<!--    <rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation"/> -->

	<!-- SECURITY -->
	<rule ref="category/apex/errorprone.xml/ApexCSRF">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation">
		<priority>2</priority>
		<!-- DOC on rule properties - https://pmd.github.io/latest/pmd_rules_apex_security.html#apexcrudviolation
		the ParamIndex properties specify which method parameter of our custom check code takes the SObject -->
		<properties>
			<property name="readAuthMethodPattern" value="Access\.(is|checkIs|check)(Accessible|Permissions)"/>
			<property name="createAuthMethodPattern" value="Access\.(is|checkIs|check)(Createable|Permissions)"/>
			<property name="updateAuthMethodPattern" value="Access\.(is|checkIs|check)(Updateable|Permissions)"/>
			<property name="deleteAuthMethodPattern" value="Access\.(is|checkIs)Deleteable"/>
		</properties>
	</rule>
	<rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexSuggestUsingNamedCred" message="Consider using named credentials for authenticated callouts">
		<priority>2</priority>
	</rule>

	<!-- BRACES -->
	<rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" message="Avoid using if statements without curly braces">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces">
		<priority>2</priority>
	</rule>

	<!-- EMPTY -->
	<rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
		<priority>2</priority>
	</rule>

	<!-- <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements."/> -->
	<!-- <rule ref="category/apex/codestyle.xml/OneDeclarationPerLine"/> -->
	<!-- <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart"/> -->

	<!-- CLARITY / BEST PRACTICES -->
	<rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel">
		<priority>2</priority>
	</rule>

	<rule ref="category/apex/bestpractices.xml/UnusedLocalVariable">
		<priority>2</priority>
	</rule>

	<!-- these are for VisualForce Pages -->
	<rule ref="category/vf/security.xml/VfCsrf">
		<priority>2</priority>
	</rule>

	<rule ref="category/vf/security.xml/VfHtmlStyleTagXss">
		<priority>2</priority>
	</rule>

	<rule ref="category/vf/security.xml/VfUnescapeEl">
		<priority>2</priority>
	</rule>

	<!-- these are for HTML -->
	<rule ref="category/html/bestpractices.xml/AvoidInlineStyles">
		<priority>2</priority>
	</rule>

	<rule ref="category/html/bestpractices.xml/UnnecessaryTypeAttribute">
		<priority>2</priority>
	</rule>

	<rule ref="category/html/bestpractices.xml/UseAltAttributeForImages">
		<priority>2</priority>
	</rule>
</ruleset>
