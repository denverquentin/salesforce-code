# Workflow to install Node and SFDX so we can build a scratch org and deploy to it

name: Deploy To Scratch Org

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch and if something changes in our metadata directory
  push:
    branches: [ master, dev, feature/** ]
    paths:
      - 'force-app/**'
  pull_request:
    types: [opened, synchronized, reopened]
    branches: [ dev ]
    paths:
      - 'force-app/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # helpful doc: https://developer.salesforce.com/blogs/2020/01/using-salesforce-dx-with-github-actions
    steps:
      # install sfdx & source scanner plugin
      - name: Install SFDX (Salesforce CLI)
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
          sfdx plugins:install @salesforce/sfdx-scanner

      - name: Output SFDX Version
        run: |
          sfdx --version
          sfdx force
          sfdx plugins

      # checkout the code in the pull request or commit
      - name: 'Checkout Code'
        uses: actions/checkout@v2

      # lint javascript for lwc's
      - name: 'Lint Lightning Web Components'
        run: sfdx force:lightning:lint --exit .force-app/main/default/lwc

      # source scanner - ignore Test classes
      # https://forcedotcom.github.io/sfdx-scanner/en/scanner-commands/run/
      # ,!./**/*Test.cls
      - name: 'Static Apex Class Analysis (excluding Test classes)'
        run: |
          sfdx scanner:run --target=force-app/main/default --category=!Documentation  --format=json --outfile=scan.json --severity-threshold=2
          echo "scan.json = $(cat scan.json)"

      # authenticate to SF dev hub
      - name: 'Authenticate to Salesforce Dev Hub'
        run: |
          sfdx force:auth:jwt:grant --clientid ${{ secrets.HUB_ORG_CLIENTID }} --username ${{ secrets.HUB_ORG_USER }} --jwtkeyfile sf.key --setalias hub --setdefaultdevhubusername
          sfdx force:org:list

      # create a scratch org
      - name: 'Create a Scratch Org'
        run: |
          sfdx force:org:create -f config/project-scratch-def.json --durationdays 1 --setalias scratch --setdefaultusername --targetdevhubusername hub adminEmail=quentinf@gmail.com username="quentinf@github.com.$GITHUB_RUN_ID.$GITHUB_RUN_NUMBER"
          sfdx force:user:password:generate -u scratch
          sfdx force:user:display -u scratch --json > sfuser.json
          echo "sfuser.json = $(cat sfuser.json)"

      # install required package in the scratch org
      # healthcloud package version id = 04t4W000002g0as
      # http://industries.force.com/healthcloud
      - name: 'Install required Package in Scratch Org'
        run: echo "coming soon!"
        # run: sfdx force:package:install --package 04t4W000002g0as -u scratch --securitytype AdminsOnly --wait 35 --noprompt

      # deploy code to the scratch org
      - name: 'Deploy Code to Scratch Org'
        run: sfdx force:source:deploy -u scratch -x manifest/package.xml

      # assign the permission set
      - name: 'Assign Permission Set to Scratch Org User'
        run: sfdx force:user:permset:assign -n PermSet -u scratch

      # run all tests in the scratch org
      - name: 'Run All Tests in Scratch Org'
        run: |
          sfdx force:apex:test:run -u scratch --testlevel RunLocalTests --codecoverage --resultformat json > sftestresults.json
          echo "sftestresults.json = $(cat sftestresults.json)"

      # send notification to Teams channel using the ms-teams-notification action
      - name: Send notification to Teams channel
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: Yay! Can send SF scratch org logins to Teams channel
          notification-color: 28a745
          timezone: America/Denver

      # delete the scratch org
      - name: 'Delete the Scratch Org'
        run: sfdx force:org:delete -u scratch --noprompt

      # LOTS OF ERRORS WE CAN'T FIX WHEN TRYING TO INSTALL SFDX WITH NPM!
      # USING ABOVE METHOD INSTEAD FOR NOW

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # https://github.com/actions/setup-node
      #- uses: actions/checkout@v2
      #- name: Installing Node.js v14
      #  uses: actions/setup-node@v2
      #  with:
      #    node-version: '14'
      #- run: npm install

      # Install SFDX using Node
      # SF sometimes has shitty buggy versions of their latest sfdx-cli that breaks
      # can find an older + working version here - https://www.npmjs.com/package/sfdx-cli
      # looks like we can add  --ignore-scripts to the sfdx-cli install line to ignore errors
      # open issues with SFDX - https://github.com/forcedotcom/cli/issues
      #- name: Install SFDX v7.127.0 (Salesforce CLI)
      #  run: |
      #    npm install sfdx-cli@7.127.0 --ignore-scripts
      #    node_modules/sfdx-cli/bin/run --version
      #    node_modules/sfdx-cli/bin run plugins --core
